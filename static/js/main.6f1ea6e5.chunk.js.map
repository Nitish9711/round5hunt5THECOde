{"version":3,"sources":["Components/InputField.js","Components/Content.js","Components/Footer.js","Views/Round1.js","Routes.js","App.js","serviceWorker.js","index.js","assets/log.jpg"],"names":["InputField","isPortrait","useMediaQuery","query","classes","makeStyles","theme","root","width","color","borderBottomColor","borderColor","useStyles","React","useState","value","setValue","correct","setCorrect","style","marginBottom","className","noValidate","autoComplete","TextField","id","label","placeholder","onChange","event","target","inputProps","multiline","display","justifyContent","margin","Button","variant","button","endIcon","onClick","toLowerCase","toString","process","NotificationManager","success","error","href","disabled","StyledTableCell","withStyles","createStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","TableRow","name","calories","rows","table","minWidth","Content","src","log","alt","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","map","row","key","scope","Footer","textAlign","flexDirection","border","padding","Round1","top","delay","bottom","Component","Routes","props","path","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.6f1ea6e5.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n\tNotificationManager,\n} from \"react-notifications\";\n\nconst InputField = () => {\n\tconst isPortrait = useMediaQuery({ query: \"(orientation: portrait)\" });\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\troot: {\n\t\t\t\"& .MuiTextField-root\": {\n\t\t\t\twidth: isPortrait ? \"100%\" : \"50vw\",\n\t\t\t\tcolor: \"white\",\n\t\t\t},\n\t\t\t\"& .MuiInputLabel-root\": {\n\t\t\t\tcolor: \"#69779b\",\n\t\t\t},\n\n\t\t\t\"& label.Mui-focused\": {\n\t\t\t\tcolor: \"#69779b\",\n\t\t\t},\n\t\t\t\"& .MuiInput-underline:after\": {\n\t\t\t\tborderBottomColor: \"#69779b\",\n\t\t\t},\n\t\t\t\"& .MuiOutlinedInput-root\": {\n\t\t\t\t\"& fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t\t\"&:hover fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t\t\"&.Mui-focused fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}));\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(\"\");\n\tconst [correct, setCorrect] = React.useState(false);\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t};\n\tconst handleAnswer = () => {\n\t\tif (value.toLowerCase().toString() === process.env.REACT_APP_ANSWER.toLowerCase().toString()) {\n\t\t\tsetCorrect(true);\n\t\t\tNotificationManager.success(\n\t\t\t\t\"Click on Next Round\",\n\t\t\t\t\"Correct Answer\"\n\t\t\t);\n\t\t} else {\n\t\t\tsetCorrect(false);\n\t\t\tNotificationManager.error(\"Keep Trying\", \"Wrong Answer\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div style={{marginBottom:50}}>\n\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"standard-textarea\"\n\t\t\t\t\tlabel=\"Enter the Answer here\"\n\t\t\t\t\tplaceholder=\"Answer\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tinputProps={{ style: { color: \"white\" } }}\n\t\t\t\t\tmultiline\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\t\t\twidth: isPortrait ? \"100%\" : \"50vw\",\n\t\t\t\t\t\tmargin: \"auto\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tendIcon={<CloudUploadIcon />}\n\t\t\t\t\t\tonClick={handleAnswer}\n\t\t\t\t\t>\n\t\t\t\t\t\tVerify Answer\n\t\t\t\t\t</Button>\n\t\t\t\t\t{correct ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\thref = {process.env.REACT_APP_NEXT_ROUND}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFill this form.\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t\t\t\t\tcolor: \"#69779b\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAnswer to activate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default InputField;\n","import React from \"react\";\nimport InputField from \"./InputField\";\nimport { useMediaQuery } from \"react-responsive\";\nimport log from \"../assets/log.jpg\";\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: \"Theme\") =>\n  createStyles({\n    root: {\n      backgroundColor: \"#272c34\",\n      color: \"white\",\n    },\n  })\n)(TableRow);\n\nfunction createData(name: string, calories: string) {\n  return { name, calories };\n}\n\nconst rows = [createData(\"n = 7, cuts = [1,3,4,5]\", \"16\")];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 100,\n  },\n});\n\nconst Content = () => {\n  const classes = useStyles();\n\n  const isPortrait = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  return (\n    <div\n      className=\"Content\"\n      style={{\n        width: isPortrait ? \"90%\" : \"70%\",\n      }}\n    >\n      <h1>CUT THE ROD</h1>\n      <p>\n        After having rescued the captured Marines, and making contact with the\n        UNSC frigate, Chief decides its time to arm the escapees for a proper\n        assault. But, they have no weapons. The only source of weapons they have\n        are Banished armouries. They do, however, have the explosive paste from\n        all the grenades Chief stole earlier. They take out the paste and lump\n        it into an explosive stick, so that they have a proper idea of what\n        quantity of explosives they have. Now they break into fireteams and\n        decide on cutting the stick. But the only proper cutting tool they have,\n        a combat knife, is already pretty battered, and it has a limited\n        durability.The durability of one cut is the length of the stick being\n        cut, the total durability is the sum of durability spent on all cuts.\n        When you cut a stick, it will be split into two smaller sticks (i.e. the\n        sum of their lengths is the length of the stick before the cut).\n      </p>\n\n      <img src={log} alt=\"Logo\" width = \"680px\" />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Sample Input</StyledTableCell>\n              <StyledTableCell>Sample Output</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  style={{ color: \"white\" }}\n                >\n                  {row.name}\n                </StyledTableCell>\n                <StyledTableCell style={{ color: \"white\" }}>\n                  {row.calories}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <h2>Question:</h2>\n      <p>\n\t  So, if the explosive stick is of 9 units and given cuts, return the minimum total durability spent on the cuts.\n      </p>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Sample Input</StyledTableCell>\n              <StyledTableCell>Sample Output</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell\n                component=\"th\"\n                scope=\"row\"\n                style={{ color: \"white\" }}\n              >\n                n = 9, cuts = [5,6,1,4,2]\n              </StyledTableCell>\n              <StyledTableCell style={{ color: \"#e33371\" }}>\n                Find the Answer\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <br />\n\n      <InputField />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Footer = () => {\n  const isPortrait = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        fontSize: 25,\n        margin: \"auto\",\n        width: isPortrait ? \"90%\" : \"70%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          border: \"1px solid #fbecec\",\n          padding: \"20px 10px\",\n        }}\n      >\n        <p\n          style={{\n            fontSize: 20,\n          }}\n        >\n          This is the last round. After clearing this round a google form will be visible\n           inplace of the \"ANSWER TO ACTIVATE\" button. You have to fill that form\n          to submit your participation.\n        </p>\n      </div>\n      <br />\n      <p>\n        Follow us on{\" \"}\n        <a href=\"https://www.instagram.com/roundtabledtu/\">\n          <InstagramIcon style={{ fontSize: 25 }} />\n        </a>{\" \"}\n        <a href=\"https://www.linkedin.com/company/round-table-dtu/mycompany/\">\n          <LinkedInIcon style={{ fontSize: 25 }} />\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, {Component} from \"react\";\nimport \"./roun1.css\";\n\n\nimport Bounce from \"react-reveal/Bounce\";\nimport Content from \"../Components/Content\";\nimport Footer from \"../Components/Footer\";\n\n\nclass Round1 extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n                    <Bounce top>\n                        <h1>Hunt The Code</h1>\n                    </Bounce>\n                    <Bounce top delay=\"200\">\n                        <h2 className=\"Heading\">Round 5</h2>\n                    </Bounce>\n                    <Bounce top delay=\"600\">\n                        <Content/>\n                    </Bounce>\n                </div>\n                <br/>\n                <br/>\n                <Bounce bottom>\n                    <Footer/>\n                </Bounce>\n            </div>\n        );\n    }\n}\n\nexport default Round1;\n","import React from 'react';\nimport { Switch,Route } from 'react-router-dom';\n\nimport Round1 from \"./Views/Round1\";\nconst Routes = (props) => {\n    return (\n        <Switch>\n            <Route path={process.env.PUBLIC_URL + \"/\"} exact component={Round1}/>\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React, {Component} from \"react\";\nimport \"./Views/roun1.css\";\n\nimport \"react-notifications/lib/notifications.css\";\nimport {NotificationContainer} from \"react-notifications\";\n\nimport Router from \"./Routes\";\nimport {BrowserRouter} from 'react-router-dom';\n\nclass App extends Component {\n    render() {\n        return (\n            // TODO: add link of round 2\n            // TODO: add instruction conectivity\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Router/>\n                    <NotificationContainer/>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/log.d312409c.jpg\";"],"sourceRoot":""}